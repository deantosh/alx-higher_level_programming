------------------------------
------------------------------
 How to Use `1-my_list` module
------------------------------
------------------------------

This is a simple test module that only has test cases for ``MyList`` class.
``MyList`` class is a class that inherits from  ``list``, adds it own public instance method
def print_sorted(self). This method prints the list, but sorted (ascending order).

 - Assume all elements of the list will be of type int.

Import module
-------------
-------------

Imports the module with the class to test.

::

    >>> MyList = __import__("1-my_list").MyList

Valid Input
-----------
-----------

case: a list with 1 element

::

    >>> my_list = MyList()
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    [5]

case: a list with 2 elements (unsorted)

::

    >>> my_list = MyList()
    >>> my_list.append(8)
    >>> my_list.append(2)
    >>> print(my_list)
    [8, 2]
    >>> my_list.print_sorted()
    [2, 8]
    >>> print(my_list)
    [8, 2]

case: a sorted list

::

    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(4)
    >>> print(my_list)
    [1, 2, 3, 4]
    >>> my_list.print_sorted()
    [1, 2, 3, 4]
    >>> print(my_list)
    [1, 2, 3, 4]

case: a list with negative values

::

    >>> my_list = MyList()
    >>> my_list.append(-8)
    >>> my_list.append(-1)
    >>> my_list.append(-4)
    >>> my_list.append(-2)
    >>> my_list.print_sorted()
    [-8, -4, -2, -1]

case: an empty list

::

    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []
