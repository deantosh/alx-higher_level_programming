------------------------------
------------------------------
How to Use 2-matrxi_divided.py
------------------------------
------------------------------

This is a simple library that has only one function ``matrix_divided(matrix, div)``.
The function divides all the elements of a matrix.


Import module
-------------
-------------

::

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Valid inputs
------------
------------

It works with an integer matrix

::

    >>> matrix_divided([[2, 4],[6, 8]], 2)
    [[1.0, 2.0], [3.0, 4.0]]

It works with a matrix with floating point values

::

    >>> matrix_divided([[1.2, 3],[5.2, 4.7]], 4)
    [[0.3, 0.75], [1.3, 1.18]]

Invalid inputs
--------------
--------------

It raises an error if matrix is not a list of lists of integers

::

    >>> matrix_divided([2, 4], 2)
    Traceback (most recent call last):
      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

It raises an error if matrix is  a list of lists of integers and other types of data

::

    >>> matrix_divided([[1, 2],[2, 'b']], 2)
    Traceback (most recent call last):
      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

It raises an error if matrix row size is not equal

::

    >>> matrix_divided([[1, 2, 4],[6, 5]], 2)
    Traceback (most recent call last):
      ...
    TypeError: Each row of the matrix must have the same size

It raises an error if div is not a number (int or float)

::

    >>> matrix_divided([[2, 4],[6, 8]], 'a')
    Traceback (most recent call last):
      ...
    TypeError: div must be a number

It raise an error is div is zero

::

    >>> matrix_divided([[1, 2],[3, 4]], 0)
    Traceback (most recent call last):
      ...
    ZeroDivisionError: division by zero
