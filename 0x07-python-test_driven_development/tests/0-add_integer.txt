-----------------------------
-----------------------------
 How to Use 0-add_integer.py
-----------------------------
-----------------------------

This test module is very simple, since it only has one function called
``add_integer(a, b=98)``


Import module
-------------
-------------

::

    >>> add_integer = __import__("0-add_integer").add_integer

Valid Input
-----------
-----------

``add_integer(a, b=98)`` returns the sum of its two arguments `a` and `b`. For numbers,
that value is equivalent to using the ``+`` operator.

::

    >>> add_integer(1, 2)
    3

It works with floating-point values by casting them to integers before addition.

::

    >>> add_integer(1.4, 5)
    6

It works with both positive and negative integers.

::

    >>> add_integer(-9, 11)
    2

    >>> add_integer(-2, -4)
    -6

It works with a single value passed as an input instead of two.

::

    >>> add_integer(2)
    100

Invalid inputs
--------------
--------------

When working with values which are not integers or floating-point, a `TypeError` is
raised with an exception message: a must be an integer or b must be an integer.

::

    >>> add_integer("name", 4)
    Traceback (most recent call last):
      ...
    TypeError: a must be an integer

    >>> add_integer(1.2, [1, 2])
    Traceback (most recent call last):
      ...
    TypeError: b must be an integer
